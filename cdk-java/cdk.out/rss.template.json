{
 "Resources": {
  "productserviceLBFE39C8A8": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "productserviceLBSecurityGroupF7B3DE52",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99"
     },
     {
      "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178",
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableAssociation8B583A17",
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520",
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTableAssociation43E5803C"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/product-service/LB/Resource"
   }
  },
  "productserviceLBSecurityGroupF7B3DE52": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB rssproductserviceLB7073D504",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/LB/SecurityGroup/Resource"
   }
  },
  "productserviceLBSecurityGrouptorssproductserviceServiceSecurityGroup72D3A5CE80650C4032": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "productserviceLBSecurityGroupF7B3DE52",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "productserviceServiceSecurityGroup66BFB566",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/LB/SecurityGroup/to rssproductserviceServiceSecurityGroup72D3A5CE:80"
   }
  },
  "productserviceLBPublicListener6925FB79": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "productserviceLBPublicListenerECSGroup1F074086"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "productserviceLBFE39C8A8"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/LB/PublicListener/Resource"
   }
  },
  "productserviceLBPublicListenerECSGroup1F074086": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "productserviceTaskDefTaskRole75C24A96": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/TaskDef/TaskRole/Resource"
   }
  },
  "productserviceTaskDef18A63324": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "AWS::AccountId"
         },
         ".dkr.ecr.",
         {
          "Ref": "AWS::Region"
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/rish-spring-shop-product-service:latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "productserviceTaskDefwebLogGroupDCBEE455"
        },
        "awslogs-stream-prefix": "product-service",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "productserviceTaskDefExecutionRole528FFE9D",
      "Arn"
     ]
    },
    "Family": "rssproductserviceTaskDef379A5DB9",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "productserviceTaskDefTaskRole75C24A96",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/TaskDef/Resource"
   }
  },
  "productserviceTaskDefwebLogGroupDCBEE455": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "rss/product-service/TaskDef/web/LogGroup/Resource"
   }
  },
  "productserviceTaskDefExecutionRole528FFE9D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/TaskDef/ExecutionRole/Resource"
   }
  },
  "productserviceTaskDefExecutionRoleDefaultPolicy7C6672EB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/rish-spring-shop-product-service"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "productserviceTaskDefwebLogGroupDCBEE455",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "productserviceTaskDefExecutionRoleDefaultPolicy7C6672EB",
    "Roles": [
     {
      "Ref": "productserviceTaskDefExecutionRole528FFE9D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "productserviceServiceE1ACA80D": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "EcsDefaultClusterMnL3mNNYN926A5246"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "productserviceLBPublicListenerECSGroup1F074086"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "productserviceServiceSecurityGroup66BFB566",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C"
       },
       {
        "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "productserviceTaskDef18A63324"
    }
   },
   "DependsOn": [
    "productserviceLBPublicListenerECSGroup1F074086",
    "productserviceLBPublicListener6925FB79"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/product-service/Service/Service"
   }
  },
  "productserviceServiceSecurityGroup66BFB566": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "rss/product-service/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/Service/SecurityGroup/Resource"
   }
  },
  "productserviceServiceSecurityGroupfromrssproductserviceLBSecurityGroupD27B37BC8034F201A6": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "productserviceServiceSecurityGroup66BFB566",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "productserviceLBSecurityGroupF7B3DE52",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "rss/product-service/Service/SecurityGroup/from rssproductserviceLBSecurityGroupD27B37BC:80"
   }
  },
  "EcsDefaultClusterMnL3mNNYN926A5246": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Resource"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpc7788A521": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/Resource"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/Subnet"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableAssociation8B583A17": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC"
    },
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F"
    }
   },
   "DependsOn": [
    "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/EIP"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178",
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableAssociation8B583A17"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/Subnet"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTableAssociation43E5803C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5"
    },
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F"
    }
   },
   "DependsOn": [
    "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/EIP"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520",
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTableAssociation43E5803C"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/Subnet"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/RouteTable"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTableAssociation34B92275": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36"
    },
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1DefaultRouteA5ADF694": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/Subnet"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/RouteTable"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableAssociation111C622F": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591"
    },
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2DefaultRoute20CE2D89": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/EcsDefaultClusterMnL3mNNYN/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/IGW"
   }
  },
  "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    },
    "InternetGatewayId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/EcsDefaultClusterMnL3mNNYN/Vpc/VPCGW"
   }
  },
  "bastionsg9F6FB053": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "rss/bastion-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "allow SSH connections from anywhere",
      "FromPort": 22,
      "IpProtocol": "tcp",
      "ToPort": 22
     }
    ],
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/bastion-sg/Resource"
   }
  },
  "bastionInstanceRole7BAD4654": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/bastion"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/bastion/InstanceRole/Resource"
   }
  },
  "bastionInstanceProfileBF7A08EB": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "bastionInstanceRole7BAD4654"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/bastion/InstanceProfile"
   }
  },
  "bastion34F27305": {
   "Type": "AWS::EC2::Instance",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "IamInstanceProfile": {
     "Ref": "bastionInstanceProfileBF7A08EB"
    },
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "KeyName": "rss-ec2-key-pair",
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "bastionsg9F6FB053",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "rss/bastion"
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash"
    }
   },
   "DependsOn": [
    "bastionInstanceRole7BAD4654"
   ],
   "Metadata": {
    "aws:cdk:path": "rss/bastion/Resource"
   }
  },
  "rssrdsSubnetGroupA4682AE4": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for rss-rds database",
    "SubnetIds": [
     {
      "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C"
     },
     {
      "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/SubnetGroup/Default"
   }
  },
  "rssrdsSecurityGroupA353CAD9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for rss-rds database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521"
    }
   },
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/SecurityGroup/Resource"
   }
  },
  "rssrdsSecurityGroupfromrssbastionsg395E93EC543255DA2C9E": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from rssbastionsg395E93EC:5432",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "rssrdsSecurityGroupA353CAD9",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "bastionsg9F6FB053",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/SecurityGroup/from rssbastionsg395E93EC:5432"
   }
  },
  "rssrdsSecurityGroupfromrssproductserviceServiceSecurityGroup72D3A5CE543272A9B7DB": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from rssproductserviceServiceSecurityGroup72D3A5CE:5432",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "rssrdsSecurityGroupA353CAD9",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "productserviceServiceSecurityGroup66BFB566",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/SecurityGroup/from rssproductserviceServiceSecurityGroup72D3A5CE:5432"
   }
  },
  "rssrssrdsSecretA80366583fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/Secret/Resource"
   }
  },
  "rssrdsSecretAttachmentF56D75D3": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "rssrssrdsSecretA80366583fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "rssrds63E2969B"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/Secret/Attachment/Resource"
   }
  },
  "rssrds63E2969B": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBInstanceIdentifier": "rss-rds",
    "DBName": "todosdb",
    "DBSubnetGroupName": {
     "Ref": "rssrdsSubnetGroupA4682AE4"
    },
    "Engine": "postgres",
    "EngineVersion": "13.6",
    "MasterUsername": "postgres",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "rssrssrdsSecretA80366583fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "rssrdsSecurityGroupA353CAD9",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "rss/rss-rds/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31SQW7bMBB8S+40mxhF0asdp4GLoBVkI9dgRa3VrSVSIJcODEF/LynKsuIWPXE4OxRHM1zKL5/l/R28u4Uqj4uaCtntGNRRBOqtQ2Vljq1xxMae1+BQoHJvLTCj1U6u2rYmBUxGvxgo11CDVlh+A1sB4w7tiVQ4UoNjUnVQFIOCdHVayu7fp614PHzcz3XkGPWoueDZfB9uRn62xrdRMtv2wXm4c4fKW+LzJPk/8VRZdO4veqsT/9qqOHvNHkXmi2Bi5wuNPOgnlBvPuIeixit/5VbOGUWD+UkcwdM2i8sP4OcQ5TucRWbpFFOdPrzVsQWcBMnJuFtxqPFXg5rFVjuOSaYzCcc4nOzGpvbgjhs8kKaLj1vGaAYKYc+4m5aHjEZY+1DNUNIIe0HQyC43KYRhzUwIbHB9RRd7mTUHqoPL2lTB5ouppn4uuBe2DKMNMBThYU4/mfKZ5Jv1nLioQ5s2hbhZXyNxA+sa0FChlV2qPQrTkp7TLNlJcDvp+zj76bn1LHJ0xtsUUQYWGhzDmQ9CwuWQay++wwk+PXyV93IpH+5+O6KF9ZqpQZmn9Q8W56X7twMAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "rss/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "productserviceLoadBalancerDNS95E8A76B": {
   "Value": {
    "Fn::GetAtt": [
     "productserviceLBFE39C8A8",
     "DNSName"
    ]
   }
  },
  "productserviceServiceURLB3824967": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "productserviceLBFE39C8A8",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}